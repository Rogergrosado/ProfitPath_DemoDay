Thanks for the clear explanation. Since your goal was created, tracked, completed, removed from Active Goals—but doesn't appear in Goal History, it means:

✅ Backend archiving triggered
❌ Frontend isn’t receiving/rendering the updated history

🔍 Here's a focused debug checklist:
✅ 1. Confirm Backend Archiving Was Triggered
Check your backend archiveGoal() or similar function:

Does it insert into goal_history with all the expected columns (original_goal_id, final_value, target_value, etc.)?

Is there a user_id on the history row?

Try this query directly in the database to check:

sql
Copiar
Editar
SELECT * FROM goal_history WHERE user_id = YOUR_USER_ID ORDER BY created_at DESC;
If it returns nothing → backend issue

✅ 2. Check for Column Mismatches in getGoalHistory API
In your backend API route (likely /api/goals/history), verify the SQL query:

ts
Copiar
Editar
SELECT 
  original_goal_id, 
  final_value, 
  target_value, 
  status, 
  progress_percentage, 
  created_at 
FROM goal_history
WHERE user_id = ?
ORDER BY created_at DESC;
✅ Ensure:

Column names match DB schema

You're not accidentally filtering out rows via WHERE status != 'met' or similar

The API is returning a proper JSON array

✅ 3. Ensure Frontend Query is Hooked Up Correctly
In your React component (Goals.tsx), you're using:

ts
Copiar
Editar
const { data: goalHistory = [] } = useQuery({
  queryKey: ["/api/goals/history"],
  enabled: !!user,
  staleTime: 0,
});
Make sure the API route actually matches /api/goals/history and the GET handler returns the right data format.

✅ 4. Add Logging or Alert on Frontend Load
Temporarily add a log:

tsx
Copiar
Editar
console.log("Goal History:", goalHistory);
If it logs an empty array, and you confirmed DB has the data → API route is the issue

✅ What to Do Right Now:
Directly check the DB:

sql
Copiar
Editar
SELECT * FROM goal_history WHERE user_id = YOUR_USER_ID;
Check your /api/goals/history route logic:

Ensure it queries the right table

Returns expected fields

Restart your backend after changes (especially if using Replit)

Clear TanStack Query cache by forcing refetch() on tab switch:

tsx
Copiar
Editar
useEffect(() => {
  if (activeTab === "completed") {
    refetchGoalHistory(); // manually call refetch
  }
}, [activeTab]);
