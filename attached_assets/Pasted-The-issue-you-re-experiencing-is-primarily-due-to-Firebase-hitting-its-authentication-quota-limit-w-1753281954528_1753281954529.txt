The issue you're experiencing is primarily due to Firebase hitting its authentication quota limit, which is blocking your backend API (/api/sales/csv-import) from working properly.

ðŸ”¥ Here's what's going wrong based on the console:
CSV Import appears to succeed visually, but logs show:

Imported undefined records â†’ means backend didnâ€™t process the rows.

Request is failing with 401 Unauthorized.

Firebase Quota Exceeded:

vbnet
Copiar
Editar
FirebaseError: Firebase: Error (auth/quota-exceeded).
Your Firebase project has run out of allowed authentication requests (likely due to many token refresh attempts). This causes:

Firebase token requests to fail with 400 Bad Request.

401 Unauthorized when calling any protected API (like /api/sales/csv-import).

âœ… How to Fix It
Option 1: Short-Term Fix (for testing)
Go to Firebase Console â†’ Project Settings â†’ Usage and billing

Check Authentication quota and click "Upgrade" if available (this might require enabling Blaze plan).

Alternatively, create a new Firebase project with new API keys and replace them temporarily in .env.

Option 2: Code Fix â€“ Handle Token Expiry Gracefully
In your queryClient.ts or wherever youâ€™re fetching Firebase auth headers:

ts
Copiar
Editar
const getAuthHeaders = async () => {
  const user = firebase.auth().currentUser;
  if (!user) return {};

  try {
    const token = await user.getIdToken();
    return {
      Authorization: `Bearer ${token}`,
    };
  } catch (err) {
    console.error("ðŸ”¥ Error getting token:", err);
    return {}; // return empty headers instead of crashing
  }
};
âœ… Fix CSV Import Not Updating Inventory
Check handleCsvSubmit in your AnalyticsModal.tsx:

Ensure the backend route /api/sales/csv-import correctly:

Checks headers (Authorization)

Parses CSV rows properly (sales, product, mixed)

Sends the updated data back to the frontend with a valid 200 response

On the frontend:

After a successful mutation, call refetchInventory() or invalidate the relevant React Query key.

ðŸ”„ Temporary Patch You Can Use
While Firebase is recovering, replace your import logic with a local-only test:

ts
Copiar
Editar
if (process.env.NODE_ENV === "development") {
  console.log("Fake import triggered");
  alert("âœ… CSV Imported (DEV MODE - no API call)");
  return;
}
Next Steps
 Fix the token refresh logic (or catch quota error).

 Ensure backend checks for Authorization and handles missing/expired tokens cleanly.

 After import mutation, trigger React Query invalidateQueries to refresh inventory list.

 If using .env, rotate API keys with fresh Firebase project for temporary relief.